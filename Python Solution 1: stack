class Solution:
    def isValid(self, s: str) -> bool:
        stack = []
        for character in s:
            if character in {"(", "{", "["}:
                stack.append(character)
            else:
                if not stack:
                    return False
                top = stack[-1]
                if character == ")" and top == "(":
                    stack.pop()
                elif character == "}" and top == "{":
                    stack.pop()
                elif character == "]" and top == "[":
                    stack.pop()
                else:
                    return False  # unmatched closing bracket
        return not stack  # valid if nothing is left open
